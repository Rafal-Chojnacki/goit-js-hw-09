{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAcF,SAASC,cAAc,wBACrCE,EAAaH,SAASC,cAAc,uBACpCG,EAAYJ,SAASC,cAAc,sBAGvCF,EAAGM,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAGJ,IAAIC,EAASC,SAASP,EAAYQ,OAC9BC,EAAQF,SAASN,EAAWO,OAC5BE,EAAOH,SAASL,EAAUM,OAGlC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAET,WAAUC,SAEvBK,GACFI,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAClEE,EAAQM,KAERC,EAAA3B,GAAS4B,OAAOG,QAAQ,oBAAmCD,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OACjEG,EAAOK,G,GAERR,E,IAKL,IAAK,IAAIc,EAAI,EAAGA,GAAKrB,EAAQqB,IAAK,CAGhBhB,EAFCgB,EACIlB,GAASkB,EAAI,GAAKjB,GAG/BkB,MAAK,SAAAP,GACXQ,QAAQC,IAAI,WAA8CL,OAAnCJ,EAAOT,SAAS,qBAAgCa,OAAbJ,EAAOR,MAAM,M,IACtEkB,OAAM,SAAAC,GACPH,QAAQC,IAAI,WAA4CL,OAAjCO,EAAMpB,SAAS,oBAA8Ba,OAAZO,EAAMnB,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// Pobranie elementów formularza\nconst form = document.querySelector('form');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\n\n// Obsługa zdarzenia wysłania formularza\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  // Pobranie wartości z pól formularza\n  const amount = parseInt(amountInput.value);\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n\n  // Funkcja tworząca obietnicę\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const result = { position, delay };\n\n      if (shouldResolve) {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        resolve(result);\n      } else {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\n  // Utworzenie i wykonanie obietnic\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const promiseDelay = delay + (i - 1) * step;\n    const promise = createPromise(position, promiseDelay);\n\n    promise.then(result => {\n      console.log(`Promise ${result.position} fulfilled after ${result.delay}ms`);\n    }).catch(error => {\n      console.log(`Promise ${error.position} rejected after ${error.delay}ms`);\n    });\n  }\n});\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","addEventListener","event","preventDefault","amount","parseInt","value","delay1","step","createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","result","$parcel$interopDefault","Notify","success","concat","failure","i","then","console","log","catch","error"],"version":3,"file":"03-promises.700caf9e.js.map"}